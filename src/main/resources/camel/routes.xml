<?xml version="1.0" encoding="UTF-8"?>
<!-- camel-k: language=xml -->

<routes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://camel.apache.org/schema/spring"
        xsi:schemaLocation="
            http://camel.apache.org/schema/spring
            https://camel.apache.org/schema/spring/camel-spring.xsd">

	<!-- Write your routes here, for example: -->
    <route id="xml">
        <from uri="timer:xml?repeatCount=1"/>

        <!-- <to uri="direct:call"/> -->

        <setBody>
            <simple>Hello Camel from ${routeId}</simple>
        </setBody>
        <log message="${body}"/>
    </route>

    <!-- MQTT entry point -->
    <route id="mqtt-consumer">
        <from uri="{{mqtt.uri}}"/>
        <log message="got MQTT image"/>

        <to uri="direct:main"/>
    </route>

    <!-- Binary (HTTP) entry point -->
    <route id="binary">
        <from uri="platform-http:/binary"/>
        <log message="incoming BINARY payload"/>

        <marshal>
            <base64 lineLength="1"/>
        </marshal>

        <setBody>
            <simple>{ "image": "${body}"}</simple>
        </setBody>

        <to uri="direct:main"/>
        <!-- <convertBodyTo type="String"/> -->
    </route>
    
    <!-- JSON (HTTP) entry point -->
    <route id="http-consumer">
        <from uri="platform-http:/detection"/>
        <log message="incoming HTTP request"/>
        <to uri="direct:main"/>
        <to uri="direct:say-hello"/>
    </route>
    
    <!-- MAIN PROCESSOR -->
    <route id="main">
        <from uri="direct:main"/>

        <to uri="direct:call"/>
        <to uri="direct:evaluate-detection"/>
        <to uri="direct:store-image"/>
    </route>

    <!-- TEST HTTP RESPONSE -->
    <route id="say-hello">
        <from uri="direct:say-hello"/>
        <setHeader name="Access-Control-Allow-Origin">
            <constant>*</constant>
        </setHeader>
        <setHeader name="Content-Type">
            <constant>text</constant>
        </setHeader>
        <setBody>
            <simple>Hello from Camel</simple>
        </setBody>
        <log message="${body}"/>
    </route>


    <route id="call">
        <from uri="direct:call"/>

        <removeHeaders pattern="*"/>

        <setProperty name="json-img">
            <simple>${body}</simple>
        </setProperty>

        <to uri="{{endpoint.detections.host}}/predictions"/>

        <log message="${body}"/>
    </route>


    <route id="evaluate-detection">
        <from uri="direct:evaluate-detection"/>

        <setBody>
            <jsonpath>$.detections[?(@.score>.8)].label</jsonpath>
        </setBody>

        <choice>
            <when>
                <simple>${body.size} &gt; 0</simple>
                <log message="OK"/>
            </when>
            <otherwise>
                <log message="FAILED"/>
            </otherwise>
        </choice>

        <log message="Detected: ${body}"/>
    </route>

    <!-- Store in S3 -->
    <route id="store-image">
        <from uri="direct:store-image"/>

        <setBody>
            <simple>${exchangeProperty.json-img}</simple>
        </setBody>
        <setBody>
            <jsonpath>$.image</jsonpath>
        </setBody>
        <unmarshal><base64/></unmarshal>



        <!-- <choice>
            <when>
                <simple>'{{environment}}' == 'dev'</simple> -->
                <setHeader name="CamelFileName">
                    <simple>${date:now:yyyy-MM-dd_HH-mm-ssZ}.jpeg</simple>
                </setHeader>        
                <!-- <to uri="file:s3"/>
            </when>
            <otherwise> -->
                <setHeader name="CamelAwsS3Key">
                    <simple>${date:now:yyyy-MM-dd_HH-mm-ssZ}.jpeg</simple>
                </setHeader>
            
                <setHeader name="CamelAwsS3ContentType">
                    <simple>image/jpeg</simple>
                </setHeader>
            
                <!-- <to uri="aws2-s3:images.bucket?{{camel.uri.s3.parameters}}"/> -->
                <to uri="{{camel.uri.s3}}"/>
            <!-- </otherwise>
        </choice> -->

        <log message="file stored"/>

    </route>

</routes>
